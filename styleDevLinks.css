body {
  /* background-image: url(./assets/bg-mobile.jpg);
    background-repeat: no-repeat;
    background-position: top;
    background-size:cover;*/
  /*ordem do background: color image repeat position/ size*/
  /*posso agrupar os background para não poluir o código.*/

  background: var(--bg-url) no-repeat top center/ cover;
  height: 100vw;
}

#container {
  /*configuração para o desktop*/
  /*com a largura de 100%, os elementos eles crescem de acordo com o tamanho da tela.*/
  /*para deixar os elementos fixos na tela, coloca-se a largura máxima para ele ir.*/
  width: 100%;
  max-width: 588px;

  margin: 56px auto 0px;
  padding: 0 24px;
}

/*profile*/
#profile img {
  width: 112px;
  height: 112px; /*geralmente, no css, não precisa colocar uma altura, pois a caixa segue o conteúdo da página.*/
  /*margin: auto; para a caixa da foto ficar centralizada.*/
  /*display: block; img é uma tag inline, para eu mexer no posicionamneto, eu preciso transformar em block.*/
}

#profile {
  /*ao invés de alinhar a foto da maneira a cima, eu posso colocar dentro da tag pai, o text-aline: center, que funciona na tag img que é inline. */
  text-align: center;
  padding: 24px;
}

#profile p {
  /*vou usar para mexer no texto abaixo da foto.*/

  font-weight: 500; /*é um bold, negrito*/
  font-size: 16px; /*por padrão, os navegadores já colocam o tamanho da font com 16px, não sendo relevante colocar.*/
  line-height: 24px; /*distância do texto para a foto em cima..*/
  margin-top: 8px;
}

body * {
  /*seletor universal para eu poder mexer em todo o body*/

  font-family: "Inter", sans-serif; /*todo o meu body terá esta fonte.*/
  color: var(--text-color);
}

* {
  /*seletor universal para mexer em todos os elemntos*/
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/*Obs: por padrão dos navegadores, eles aplicam margem e preenchimentos automaticamente, então eu resetei usando o seletor universal.*/

/*listas*/
ul {
  list-style: none; /*para tirar os pontos da lista não ordenada*/
  display: flex;
  flex-direction: column; /*eu preciso colocar essa tag para dizer ao gab como eu quero distaciar o elemento, nesse caso, na vertical.*/
  gap: 16px; /*é o espaço entre um bloco e outro da lista.*/
  padding: 24px 0px; /*distância entre o quadrado e os ícones.*/
}

ul li a {
  display: flex; /*quando é display flex, eu uso as opções abaixo para deixar centralizado.*/
  justify-content: center; /*serviu para centralizar o texto no retângulo.*/
  align-items: center; /*alinhar os itens afastando eles da borda*/

  padding: 16px 24px;
  background: var(--surface-color); /*a cor de fundo do retângulo.*/
  border: 1px solid var(--stroke-color); /*cor da borda*/
  border-radius: 8px; /*arredontamneto de borda*/
  backdrop-filter: blur(4px); /*coloca um leve embaçado*/
  -webkit-backdrop-filter: blur(4px);
  /*OBS: alguns browser não tem o suporte para rodar este tipo de comando, então coloca o webkit no começo para rodar nos browser que não tem o suporte.*/

  text-decoration: none; /*posso tirar as linhas que ficam embaixo no texto*/
  font-weight: 500; /*o negrito do texto.*/
  transition: background 0.2s; /*muda a transição da cor ao passar o mouse em cima*/
}

/*é um pseudo seletor / pseudo selector*/
ul li a:hover {
  /* "hover" aplica o efeito quando passa o mouse em cima*/
  background: var(--surface-color-hover);
  border: 1.5px solid var(--text-color);
}

/*social-links*/
#social-links {
  display: flex;
  justify-content: center;
  padding: 24px;
  font-size: 24px;
}
#social-links a:hover {
  background: var(--highlight-color);
}

#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  border-radius: 50%;
  transition: background 0.2s;
}

/*Fiz sem olhar a aula e coloquei de outro modo que, também, deu certo.*/
#footer {
  display: flex;
  justify-content: center;
  gap: 6px;
  padding: 24px;
  font-size: 14px;
}

/*aplicando o root*/

/*ao colocar o root, estou mexendo na raíz, ou seja, no meu html. Poderia ser o nome html no lugar do root, mas a preferência é colocar o root.*/
:root {
  /*o lugar que eu usar esta variável, receberá a cor branca. var(--text-color); */
  --text-color: white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(./assets/moom-mobile.svg);
}

/*aplicando o modo claro.*/

/*modificando o modo claro. usando a class=light*/
.light {
  --text-color: black;
  /*coloquei a imagem de fundo claro.*/
  --bg-url: url(./assets/bg-mobile-light.jpg);

  /*apliquei uma cor na borda.*/
  --stroke-color: rgba(0, 0, 0, 0.5);

  /*apliquei uma cor de fundo do retângulo.*/
  --surface-color: rgba(0, 0, 0, 0.05);

  /*apliquei uma cor de fundo ao passar o mouse em cima.*/
  --surface-color-hover: rgba(0, 0, 0, 0.2);

  /*apliquei uma cor no fundo dos ícones ao passar mose em cima.*/
  --highlight-color: rgba(0, 0, 0, 0.1);

  /*aplicando a imagem do sol.*/
  --switch-bg-url: url(./assets/sun-mobile.svg);
}

/*mexendo no botão do switch*/
#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;

  /*consigo sobrepor o span sobre o botão, mas para deixá-lo sob, eu coloco o z-index*/
  position: absolute;
  left: 0;
  z-index: 1;

  /*esse transform:translatey permite que mova o botão de maneira que eu posso deixá-lo bem alinhado com o span. y movimenta na vertical (o sinal de - é para ele mover para cima, se eu tirar, ele move para baixo.) o translatex move para a horizontal (com o sinal de - eu movo para a esquerda e, sem o sinal, eu movo para a direita).*/
  transform: translatey(-10%);
}

/*mexendo no span do swicth*/
#switch span {
  /*span é inline e não aceita as variações como o tamanho.*/
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;
}

/*mexendo na caixa do switch*/

/*position relative eu posiono o botão somente na caixa do switch*/
#switch {
  position: relative;
  /*para eu deixar o botão alinhado com o span, eu preciso colocar a mesma largura do span no swicth*/
  width: 64px;

  /*usei para alinhar a caixa ao meio, quando é display block.*/
  margin: 4px auto;
}

/*mudando o posicionamento do botão*/
.light #switch button {
  /*rigth, porque lá está como left.*/
  right: 0;

  /*initial para ele voltar a posição inicial*/
  left: initial;
}

/*media queries*/
/*estou dizendo que superior a 700px ele coloque as configurções que estão dentro do @media*/
@media (min-width: 700px) {
  :root {
    --bg-url: url(./assets/bg-desktop-dark.jpg);
  }
  .light {
    --bg-url: url(./assets/bg-desktop-light.jpg);
  }
}
